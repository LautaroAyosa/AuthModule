services:
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      - NODE_ENV=development
      - DB_TYPE=${DB_TYPE}
      - BACKEND_PORT=${BACKEND_PORT}
      - MONGO_URI=${MONGO_URI}
      - MONGO_DB=${MONGO_DB}
      - JWT_SECRET=${JWT_SECRET}
      - HOME_URL=${HOME_URL}
      - APP_NAME=${APP_NAME}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASS=${MAIL_PASS}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /usr/src/app
          ignore:
            - node_modules/
            - .git/

    depends_on:
      - mongo

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    environment:
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
      - FRONTEND_PORT=${FRONTEND_PORT}
    ports:
      - "${FRONTEND_PORT}:3000"
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /usr/src/app
          ignore:
            - node_modules/
            - .git/

volumes:
  mongodb-data:
