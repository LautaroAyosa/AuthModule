## Example Docker Compose file for the Auth Module

services:
  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Nginx config
      - /etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # SSL certificates
      - /etc/nginx/certs:/etc/nginx/certs:ro
      
  frontend:
    image: lautaroayosa/auth-module_frontend:latest
    container_name: auth-module_frontend
    restart: always
    environment:
      - API_BASE_URL=${API_BASE_URL}
    ports:
      - "${FRONTEND_PORT}:3000"

  backend:
    image: lautaroayosa/auth-module_backend:latest
    container_name: auth-module_backend
    restart: always
    ports:
      - "${BACKEND_PORT:-5000}:${BACKEND_PORT:-5000}"
    environment:
      - PORT=${BACKEND_PORT:-5000}
      - HOME_URL=${HOME_URL}
      - DB_TYPE=${DB_TYPE}
      - MONGO_URI=${MONGO_URI}
      - NODE_ENV=${NODE_ENV}
      - APP_NAME=${APP_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - FRONTEND_CORS_URL=${FRONTEND_CORS_URL}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASS=${MAIL_PASS}
    depends_on:
      - mongo


  mongo:
    image: mongo:latest
    container_name: auth-module_mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mongodb-data:

networks:
  auth-module-network:
    driver: bridge
